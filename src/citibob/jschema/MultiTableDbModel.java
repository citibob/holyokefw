/*
Holyoke Framework: library for GUI-based database applications
This file Copyright (c) 2006-2008 by Robert Fischer

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
package citibob.jschema;

import java.util.*;
import java.sql.*;
import citibob.swing.table.*;

/**
 * A DbModel meant for reports.  It presents one TableModel to the world
 as its output; however, the data are generally stored in a set of tables
 generated by a set of sub-TableModels, including the OuterJoinRSTableModel.
 All sub-models must be of class TableDbModel. */
public abstract class MultiTableDbModel extends MultiDbModel //implements TableDbModel
{

//JTypeTableModel tableModel;

public MultiTableDbModel() {}
public MultiTableDbModel(DbModel[] mm) {init(mm); }
public void init(DbModel[] mm)
{
	super.init(mm);
//	setTableModel();
}
/** Creates and stores a new TableModle, based on the models that have
 been added so far. */
public JTypeTableModel newTableModel()
{
	JTypeTableModel[] tableModels = new JTypeTableModel[models.size()];
	int i=0;
	for (Object o : models) {
		TableDbModel m = (TableDbModel)o;
		tableModels[i++] = m.getTableModel();
System.out.println("ncols = " + m.getTableModel().getColumnCount());
	}
	JTypeTableModel tableModel = new MultiJTypeTableModel(tableModels);
	return tableModel;
}

///** Return the JTypeTableModel associated with this DbModel */
//public citibob.swing.table.JTypeTableModel getTableModel()
//{
//	return tableModel;
//}
	
	
}
