/*
OffstageArts: Enterprise Database for Arts Organizations
This file Copyright (c) 2005-2008 by Robert Fischer

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
/*
 * UpgradesDialog.java
 *
 * Created on March 1, 2008, 12:27 AM
 */

package citibob.config.dialog;

import citibob.app.App;
import citibob.resource.ResModels;
import citibob.resource.ResModels.UPlanModel;
import citibob.resource.ResSet;
import citibob.resource.RtRes;
import citibob.resource.RtResKey;
import citibob.resource.UpgradePlan;
import citibob.sql.SqlRun;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;

/**
 
 @author  citibob
 */
public class UpgradesDialog extends javax.swing.JDialog
{
App app;
public boolean doUpgrade = false;		// Result of user choice
public boolean required;		// true if all resources to be created are required

	/** Creates new form UpgradesDialog */
	public UpgradesDialog(java.awt.Frame parent, boolean modal)
	{
		super(parent, modal);
		initComponents();

	}

	public void initRuntime(SqlRun str, App xapp, ArrayList<UpgradePlan> uplans)
	{
		this.app = xapp;
		ResSet rset = app.resSet();

		// See if any upgrades are required
		required = false;
		for (UpgradePlan up : uplans) {
			if (up.getLast().getResource().isRequired()) required = true;
		}
		
		UPlanModel mod = new UPlanModel();
		mod.setData(uplans);
		this.tUpgradePlans.setModelU(mod,
			new String[] {"Resource", "Plan", "Back Compatible", "Required"},
			new String[] {"resourceName", "UpgradePlan", "backcompatible", "required"},
			null, app.swingerMap());
		tUpgradePlans.setFormatU("UpgradePlan", new ResModels.PathSFormat());

		// Select an upgrade plan to inspect and maybe execute
		tUpgradePlans.addPropertyChangeListener("value", new PropertyChangeListener() {
		public void propertyChange(PropertyChangeEvent evt) {
			Object val = evt.getNewValue();
			if (val == null) upgradeSteps.setText("");
			else {
				UpgradePlan uplan = (UpgradePlan)val;
				upgradeSteps.setText(uplan.getDescription());
			}
		}});

		app.swingPrefs().setPrefs(this,
			app.guiRoot().node("dialog-UpgradesDialog"));
	};

	/** This method is called from within the constructor to
	 initialize the form.
	 WARNING: Do NOT modify this code. The content of this method is
	 always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jTextArea1 = new javax.swing.JTextArea();
        jSplitPane4 = new javax.swing.JSplitPane();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tUpgradePlans = new citibob.swing.typed.JTypedSelectTable();
        jPanel3 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        bUpgrade = new javax.swing.JButton();
        bDontUpgrade = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        upgradeSteps = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("The following upgrades are required to run this version of OffstageArts.  Please confirm that you wish to perform them.  Note that clicking \"Upgrade\" could prevent the future use of previous versions of OffstageArts from all computers in your network.");
        jTextArea1.setWrapStyleWord(true);
        jPanel1.add(jTextArea1, java.awt.BorderLayout.NORTH);

        jSplitPane4.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jPanel9.setLayout(new java.awt.BorderLayout());

        tUpgradePlans.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String []
            {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tUpgradePlans);

        jPanel9.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jSplitPane4.setTopComponent(jPanel9);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel8.setLayout(new java.awt.GridBagLayout());

        bUpgrade.setText("Upgrade");
        bUpgrade.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                bUpgradeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel8.add(bUpgrade, gridBagConstraints);

        bDontUpgrade.setText("Do Not Upgrade");
        bDontUpgrade.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                bDontUpgradeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel8.add(bDontUpgrade, gridBagConstraints);

        jPanel3.add(jPanel8, java.awt.BorderLayout.PAGE_END);

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 12));
        jLabel7.setText("Upgrade Steps (Details)");
        jPanel3.add(jLabel7, java.awt.BorderLayout.NORTH);

        upgradeSteps.setContentType("text/html");
        jScrollPane5.setViewportView(upgradeSteps);

        jPanel3.add(jScrollPane5, java.awt.BorderLayout.CENTER);

        jSplitPane4.setBottomComponent(jPanel3);

        jPanel1.add(jSplitPane4, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void bUpgradeActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_bUpgradeActionPerformed
	{//GEN-HEADEREND:event_bUpgradeActionPerformed
		doUpgrade = true;
		setVisible(false);
		// TODO add your handling code here:
	}//GEN-LAST:event_bUpgradeActionPerformed

	private void bDontUpgradeActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_bDontUpgradeActionPerformed
	{//GEN-HEADEREND:event_bDontUpgradeActionPerformed
		doUpgrade = false;
		setVisible(false);
		// TODO add your handling code here:
}//GEN-LAST:event_bDontUpgradeActionPerformed
	
	/**
	 @param args the command line arguments
	 */
	public static void main(String args[])
	{
		java.awt.EventQueue.invokeLater(new Runnable()
		{
			public void run()
			{
				UpgradesDialog dialog = new UpgradesDialog(new javax.swing.JFrame(), true);
				dialog.addWindowListener(new java.awt.event.WindowAdapter()
				{
					public void windowClosing(java.awt.event.WindowEvent e)
					{
						System.exit(0);
					}
				});
				dialog.setVisible(true);
			}
		});
	}
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bDontUpgrade;
    private javax.swing.JButton bUpgrade;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSplitPane jSplitPane4;
    private javax.swing.JTextArea jTextArea1;
    private citibob.swing.typed.JTypedSelectTable tUpgradePlans;
    private javax.swing.JTextPane upgradeSteps;
    // End of variables declaration//GEN-END:variables
	
}
